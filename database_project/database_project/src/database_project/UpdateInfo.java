/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package database_project;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Nethmi
 */
public class UpdateInfo extends javax.swing.JFrame {

    /**
     * Creates new form UpdateInfo
     */
    public UpdateInfo() {
        initComponents();
    }
    Connection con;
    PreparedStatement pst;
    int clinicID = 0;
    int doctorID = 0;
    int pid = 0;
    int patientId = 0;
    int count = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        note = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        medicine = new javax.swing.JTextArea();
        patientID = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        hr_No = new javax.swing.JLabel();
        pName = new javax.swing.JLabel();
        dID = new javax.swing.JLabel();
        clinic = new javax.swing.JLabel();
        dName = new javax.swing.JLabel();
        cID = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        lastUpdate = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        p_ID = new javax.swing.JLabel();
        NIC = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        buttonUpdate = new javax.swing.JButton();
        buttonBack = new javax.swing.JButton();
        pId = new javax.swing.JRadioButton();
        nic = new javax.swing.JRadioButton();
        clinics = new javax.swing.JComboBox<>();
        buttonCheck = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setLocation(new java.awt.Point(0, 0));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(0, 102, 102));
        jLabel1.setFont(new java.awt.Font("MS PGothic", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Update Health Record Details");
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(351, 20, 440, 57));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 102));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Date");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(618, 187, 138, 32));

        dateChooser2.setBackground(new java.awt.Color(0, 102, 102));
        getContentPane().add(dateChooser2, new org.netbeans.lib.awtextra.AbsoluteConstraints(766, 187, 264, 32));

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 102));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel14.setText("Medicine");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(618, 427, 138, 32));

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 102));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel15.setText("Note");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(618, 237, 138, 32));

        note.setBackground(new java.awt.Color(0, 102, 102));
        note.setColumns(20);
        note.setFont(new java.awt.Font("Century", 0, 18)); // NOI18N
        note.setForeground(new java.awt.Color(255, 255, 255));
        note.setRows(5);
        jScrollPane3.setViewportView(note);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(766, 237, 339, 172));

        medicine.setBackground(new java.awt.Color(0, 102, 102));
        medicine.setColumns(20);
        medicine.setFont(new java.awt.Font("Century", 0, 18)); // NOI18N
        medicine.setForeground(new java.awt.Color(255, 255, 255));
        medicine.setRows(5);
        jScrollPane5.setViewportView(medicine);

        getContentPane().add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(766, 427, 339, 156));

        patientID.setBackground(new java.awt.Color(0, 102, 102));
        patientID.setFont(new java.awt.Font("Century", 0, 18)); // NOI18N
        patientID.setForeground(new java.awt.Color(255, 255, 255));
        patientID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientIDActionPerformed(evt);
            }
        });
        getContentPane().add(patientID, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 120, 142, 32));

        jPanel4.setBackground(new java.awt.Color(0, 102, 102));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 0, 18), new java.awt.Color(255, 255, 51))); // NOI18N
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));

        jLabel22.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 102));
        jLabel22.setText("Patient Name");

        jLabel23.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 102));
        jLabel23.setText("Health Record NO");

        jLabel24.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 102));
        jLabel24.setText("Clinic ");

        jLabel25.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 102));
        jLabel25.setText("Doctor ID");

        hr_No.setFont(new java.awt.Font("Century", 0, 18)); // NOI18N
        hr_No.setForeground(new java.awt.Color(255, 255, 255));

        pName.setFont(new java.awt.Font("Century", 0, 18)); // NOI18N
        pName.setForeground(new java.awt.Color(255, 255, 255));

        dID.setFont(new java.awt.Font("Century", 0, 18)); // NOI18N
        dID.setForeground(new java.awt.Color(255, 255, 255));

        clinic.setFont(new java.awt.Font("Century", 0, 18)); // NOI18N
        clinic.setForeground(new java.awt.Color(255, 255, 255));

        dName.setFont(new java.awt.Font("Century", 0, 18)); // NOI18N
        dName.setForeground(new java.awt.Color(255, 255, 255));

        cID.setFont(new java.awt.Font("Century", 0, 18)); // NOI18N
        cID.setForeground(new java.awt.Color(255, 255, 255));

        jLabel26.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 102));
        jLabel26.setText("Last updated date");

        lastUpdate.setFont(new java.awt.Font("Century", 0, 18)); // NOI18N
        lastUpdate.setForeground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 51));
        jLabel3.setText("NIC");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 51));
        jLabel5.setText("Patient ID");

        p_ID.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        p_ID.setForeground(new java.awt.Color(255, 255, 51));

        NIC.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        NIC.setForeground(new java.awt.Color(255, 255, 51));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(lastUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(47, 47, 47)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(p_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(hr_No, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(NIC, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel23))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(52, 52, 52)
                                        .addComponent(cID, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(clinic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                                        .addComponent(dID, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(dName, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(hr_No, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(NIC, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(p_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clinic, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 190, -1, 340));

        searchButton.setBackground(new java.awt.Color(255, 255, 255));
        searchButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        searchButton.setLabel("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        getContentPane().add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 120, -1, -1));

        buttonUpdate.setBackground(new java.awt.Color(255, 255, 255));
        buttonUpdate.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        buttonUpdate.setText("Update");
        buttonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(buttonUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 600, 192, 47));

        buttonBack.setBackground(new java.awt.Color(255, 255, 255));
        buttonBack.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        buttonBack.setText("Back");
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });
        getContentPane().add(buttonBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 660, 192, 47));

        pId.setBackground(new java.awt.Color(0, 102, 102));
        buttonGroup1.add(pId);
        pId.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        pId.setForeground(new java.awt.Color(255, 255, 51));
        pId.setText("Patient ID");
        getContentPane().add(pId, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, 110, 30));

        nic.setBackground(new java.awt.Color(0, 102, 102));
        buttonGroup1.add(nic);
        nic.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        nic.setForeground(new java.awt.Color(255, 255, 51));
        nic.setText("NIC");
        nic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nicActionPerformed(evt);
            }
        });
        getContentPane().add(nic, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 100, 30));

        getContentPane().add(clinics, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 120, 130, 30));

        buttonCheck.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        buttonCheck.setText("Check Details");
        buttonCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCheckActionPerformed(evt);
            }
        });
        getContentPane().add(buttonCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 120, 160, 30));

        jLabel2.setBackground(new java.awt.Color(0, 102, 102));
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1160, 680));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void patientIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientIDActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
     if(nic.isSelected() == true){
         try {

            pid = Integer.parseInt(patientID.getText().toString());
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/hospital management system", "root", "");
            pst = con.prepareStatement("select * from patient where NIC = ? ");
            pst.setInt(1, pid);
            ResultSet rsl = pst.executeQuery();

            if (!rsl.next()) {
                JOptionPane.showMessageDialog(this, "this id not exist");
                HomePage homePage = new HomePage();
                homePage.setVisible(true);
                dispose();
                patientID.requestFocus();
            } else {
                patientId = rsl.getInt("Patient_ID");
                NIC.setText(rsl.getString("NIC"));
                p_ID.setText(rsl.getString("Patient_ID"));
              }
            pst = con.prepareStatement("select * from health_record where Patient_ID = ? ");
            pst.setInt(1, patientId);
            rsl = pst.executeQuery();
          
               while(rsl.next()){
                   clinicID = rsl.getInt("Clinic_ID");
                   clinics.addItem(Integer.toString(clinicID));
                   count++;
                  }           
         
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_Record.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Add_Record.class.getName()).log(Level.SEVERE, null, ex);
        }   
     }
     
     else if(pId.isSelected() == true){
        try {
            pid = Integer.parseInt(patientID.getText().toString());
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/hospital management system", "root", "");
            pst = con.prepareStatement("select * from patient where Patient_ID = ? ");
            pst.setInt(1, pid);
            ResultSet rsl = pst.executeQuery();

            if (!rsl.next()) {
                JOptionPane.showMessageDialog(this, "this id not exist");
                HomePage homePage = new HomePage();
                homePage.setVisible(true);
                dispose();
                patientID.requestFocus();
            } else {                
                NIC.setText(rsl.getString("NIC"));
                p_ID.setText(rsl.getString("Patient_ID"));
            }
            
            pst = con.prepareStatement("select * from health_record where Patient_ID = ? ");
            pst.setInt(1, pid);
            rsl = pst.executeQuery();
            while(rsl.next()){
                   clinicID = rsl.getInt("Clinic_ID");
                   clinics.addItem(Integer.toString(clinicID));
                   count++;
                  }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_Record.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Add_Record.class.getName()).log(Level.SEVERE, null, ex);
        }
     }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateActionPerformed
        
         try {
            int patient_Id = Integer.parseInt(p_ID.getText());
            SimpleDateFormat date = new SimpleDateFormat("yyyy-MM-dd");
            String Patient_Name = pName.getText();
            String Date = date.format(dateChooser2.getDate());
            String Note = note.getText();
            String Medicine = medicine.getText();
            SimpleDateFormat date1 = new SimpleDateFormat("yyyy-MM-dd");
            String Last_Updated_date = date1.format(dateChooser2.getDate());
            int Clinic_ID = Integer.parseInt(clinics.getSelectedItem().toString());
            
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/hospital management system", "root", "");
            pst = con.prepareStatement("update health_record set Medicine=?, Last_Updated_date=?, Note=? where Patient_ID=? && Clinic_ID=?");
            pst.setString(1, Medicine);
            pst.setString(2, Last_Updated_date);
            pst.setString(3, Note);
             pst.setInt(4, patient_Id);
            pst.setInt(5, Clinic_ID);
            pst.executeUpdate();          
            
            if(cID.getText().equals("1")){
                pst = con.prepareStatement("insert into eye_clinic(Patient_ID,Patient_Name,Date)values(?,?,?)");
                pst.setInt(1, patient_Id);
                pst.setString(2, Patient_Name);
                SimpleDateFormat newDate1 = new SimpleDateFormat("yyyy-MM-dd");
                pst.setString(3, Date);
                pst.executeUpdate();
            }
            else if(cID.getText().equals("2")){
                pst = con.prepareStatement("insert into cardiology_clinic(Patient_ID,Patient_Name,Date)values(?,?,?)");
                pst.setInt(1, patient_Id);
                pst.setString(2, Patient_Name);
                SimpleDateFormat newDate1 = new SimpleDateFormat("yyyy-MM-dd");
                pst.setString(3, Date);
                pst.executeUpdate();
            }
            else if(cID.getText().equals("3")){
                pst = con.prepareStatement("insert into ent_clinic(Patient_ID,Patient_Name,Date)values(?,?,?)");
                pst.setInt(1, patient_Id);
                pst.setString(2, Patient_Name);
                SimpleDateFormat newDate1 = new SimpleDateFormat("yyyy-MM-dd");
                pst.setString(3, Date);
                pst.executeUpdate();
            }
            else if(cID.getText().equals("4")){
                pst = con.prepareStatement("insert into orthopedic_clinic(Patient_ID,Patient_Name,Date)values(?,?,?)");
                pst.setInt(1, patient_Id);
                pst.setString(2, Patient_Name);
                SimpleDateFormat newDate1 = new SimpleDateFormat("yyyy-MM-dd");
                pst.setString(3, Date);
                pst.executeUpdate();
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Error..!.");
            }
            JOptionPane.showMessageDialog(null, "new record was succussesfully updated...");
            patientID.setText("");
            hr_No.setText("");
            pName.setText("");
            note.setText("");
            dName.setText("");
            dID.setText("");
            cID.setText("");
            clinic.setText("");
            medicine.setText("");
            lastUpdate.setText("");
                      
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_Record.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Add_Record.class.getName()).log(Level.SEVERE, null, ex);
        }
         
    }//GEN-LAST:event_buttonUpdateActionPerformed

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        Admin newAdmin = new Admin();
        newAdmin.setVisible(true);
        dispose();
    }//GEN-LAST:event_buttonBackActionPerformed

    private void nicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nicActionPerformed

    private void buttonCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCheckActionPerformed
        if(nic.isSelected() == true){
        try {
             int pid2 = patientId;
             int selectedClinic = Integer.parseInt(clinics.getSelectedItem().toString());
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/hospital management system", "root", "");
            pst = con.prepareStatement("select * from patient where Patient_ID = ?");
            pst.setInt(1, pid2);
            ResultSet rsl = pst.executeQuery();

            if (!rsl.next()) {
                JOptionPane.showMessageDialog(this, "this id not exist");
                HomePage homePage = new HomePage();
                homePage.setVisible(true);
                dispose();
                pName.setText("");
                note.setText("");
                dName.setText("");
                clinic.setText("");
                medicine.setText("");
                lastUpdate.setText("");
                patientID.requestFocus();
            } else {
                pName.setText(rsl.getString("Patient_Name"));
            }
            pst = con.prepareStatement("select * from health_record where Patient_ID = ? && Clinic_ID = ? ");
            pst.setInt(1, pid2);
            pst.setInt(2, selectedClinic);
            rsl = pst.executeQuery();
          
               if(!rsl.next()){
                   JOptionPane.showMessageDialog(this, "error");
               }
               else{
                hr_No.setText(Integer.toString(rsl.getInt("HR_ID")));
                medicine.setText(rsl.getString("Medicine"));
                lastUpdate.setText(rsl.getString("Last_Updated_date"));
                note.setText(rsl.getString("Note"));
                 }
            
           pst = con.prepareStatement("select * from clinic where Clinic_ID = ? ");
            pst.setInt(1, selectedClinic);
            rsl = pst.executeQuery();
            if (!rsl.next()) {
                JOptionPane.showMessageDialog(this, "error");
            } else {
                cID.setText(Integer.toString(rsl.getInt("Clinic_ID")));
                clinic.setText(rsl.getString("Clinic_Name"));
                doctorID = rsl.getInt("Doctor_ID");
            }

            pst = con.prepareStatement("select * from doctor where Doctor_ID = ? ");
            pst.setInt(1, doctorID);
            rsl = pst.executeQuery();
            if (!rsl.next()) {
                JOptionPane.showMessageDialog(this, "error");
            } else {
                dName.setText(rsl.getString("Doctor_Name"));
                dID.setText(Integer.toString(rsl.getInt("Doctor_ID")));

            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_Record.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Add_Record.class.getName()).log(Level.SEVERE, null, ex);
        }
      }
        else if(pId.isSelected() == true){
                    try {
             
             int selectedClinic = Integer.parseInt(clinics.getSelectedItem().toString());
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/hospital management system", "root", "");
            pst = con.prepareStatement("select * from patient where Patient_ID = ?");
            pst.setInt(1, pid);
            ResultSet rsl = pst.executeQuery();

            if (!rsl.next()) {
                JOptionPane.showMessageDialog(this, "this id not exist");
                HomePage homePage = new HomePage();
                homePage.setVisible(true);
                dispose();
                pName.setText("");
                note.setText("");
                dName.setText("");
                clinic.setText("");
                medicine.setText("");
                lastUpdate.setText("");
                patientID.requestFocus();
            } else {
                pName.setText(rsl.getString("Patient_Name"));
            }
            pst = con.prepareStatement("select * from health_record where Patient_ID = ? && Clinic_ID = ? ");
            pst.setInt(1, pid);
            pst.setInt(2, selectedClinic);
            rsl = pst.executeQuery();
          
               if(!rsl.next()){
                   JOptionPane.showMessageDialog(this, "error");
               }
               else{
                hr_No.setText(Integer.toString(rsl.getInt("HR_ID")));
                medicine.setText(rsl.getString("Medicine"));
                lastUpdate.setText(rsl.getString("Last_Updated_date"));
                note.setText(rsl.getString("Note"));
                 }
            
           pst = con.prepareStatement("select * from clinic where Clinic_ID = ? ");
            pst.setInt(1, selectedClinic);
            rsl = pst.executeQuery();
            if (!rsl.next()) {
                JOptionPane.showMessageDialog(this, "error");
            } else {
                cID.setText(Integer.toString(rsl.getInt("Clinic_ID")));
                clinic.setText(rsl.getString("Clinic_Name"));
                doctorID = rsl.getInt("Doctor_ID");
            }

            pst = con.prepareStatement("select * from doctor where Doctor_ID = ? ");
            pst.setInt(1, doctorID);
            rsl = pst.executeQuery();
            if (!rsl.next()) {
                JOptionPane.showMessageDialog(this, "error");
            } else {
                dName.setText(rsl.getString("Doctor_Name"));
                dID.setText(Integer.toString(rsl.getInt("Doctor_ID")));

            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_Record.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Add_Record.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_buttonCheckActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel NIC;
    private javax.swing.JButton buttonBack;
    private javax.swing.JButton buttonCheck;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton buttonUpdate;
    private javax.swing.JLabel cID;
    private javax.swing.JLabel clinic;
    private javax.swing.JComboBox<String> clinics;
    private javax.swing.JLabel dID;
    private javax.swing.JLabel dName;
    private com.toedter.calendar.JDateChooser dateChooser2;
    private javax.swing.JLabel hr_No;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lastUpdate;
    private javax.swing.JTextArea medicine;
    private javax.swing.JRadioButton nic;
    private javax.swing.JTextArea note;
    private javax.swing.JRadioButton pId;
    private javax.swing.JLabel pName;
    private javax.swing.JLabel p_ID;
    private javax.swing.JTextField patientID;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables
}
