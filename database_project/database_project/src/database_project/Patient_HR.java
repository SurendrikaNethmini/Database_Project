
package database_project;

import Project.ConnectionProvider;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Nethmi
 */
public class Patient_HR extends javax.swing.JFrame {

    /**
     * Creates new form DB_project
     */
    public Patient_HR() {
        
        initComponents();
        con = ConnectionProvider.con();
    }
    
    Connection con;
    PreparedStatement pst;
    int pid;
    int count = 0;
    int doctorID = 0;
    int clinicID = 0;
    int patientId = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        buttonGroup1 = new javax.swing.ButtonGroup();
        Label1 = new javax.swing.JLabel();
        age = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        dName = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        clinic = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lastUpdate = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        patientID = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        pName = new javax.swing.JLabel();
        buttonOk = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        gender = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        note = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        medicine = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        labResult = new javax.swing.JTextArea();
        nic = new javax.swing.JRadioButton();
        pID = new javax.swing.JRadioButton();
        buttonCheck = new javax.swing.JButton();
        clinics = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Heath Record");
        setLocation(new java.awt.Point(0, 0));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Label1.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        Label1.setForeground(new java.awt.Color(255, 255, 255));
        Label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Label1.setText("Patient's Health Record");
        Label1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Label1.setName(""); // NOI18N
        getContentPane().add(Label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 40, 400, 40));

        age.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        age.setForeground(new java.awt.Color(255, 255, 255));
        age.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        age.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        getContentPane().add(age, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 240, 89, 26));

        jLabel2.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Attending Clinic");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, 156, 26));

        dName.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        dName.setForeground(new java.awt.Color(255, 255, 255));
        dName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        dName.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        getContentPane().add(dName, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 380, 172, 28));

        jLabel4.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Last updated Date");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 420, 162, 31));

        jLabel5.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Special Note");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 470, 136, 33));

        jLabel6.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Patient's Name");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, 136, 26));

        clinic.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        clinic.setForeground(new java.awt.Color(255, 255, 255));
        clinic.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        clinic.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        getContentPane().add(clinic, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 330, 172, 26));

        jLabel8.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Doctor's Name");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 380, 172, 28));

        lastUpdate.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        lastUpdate.setForeground(new java.awt.Color(255, 255, 255));
        lastUpdate.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lastUpdate.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        getContentPane().add(lastUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 420, 172, 33));

        jLabel11.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Age");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, 64, 25));

        jLabel12.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Medicine");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 200, 126, -1));

        patientID.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        patientID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientIDActionPerformed(evt);
            }
        });
        getContentPane().add(patientID, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 120, 116, 31));

        searchButton.setBackground(new java.awt.Color(255, 255, 255));
        searchButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        searchButton.setLabel("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        getContentPane().add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 120, -1, -1));

        pName.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        pName.setForeground(new java.awt.Color(255, 255, 255));
        pName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        pName.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        getContentPane().add(pName, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 200, 320, 26));

        buttonOk.setBackground(new java.awt.Color(255, 255, 255));
        buttonOk.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        buttonOk.setText("Ok");
        buttonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOkActionPerformed(evt);
            }
        });
        getContentPane().add(buttonOk, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 560, 85, 50));

        jLabel18.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Gender");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 290, 64, 25));

        gender.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        gender.setForeground(new java.awt.Color(255, 255, 255));
        gender.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        gender.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        getContentPane().add(gender, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 290, 105, 25));

        note.setEditable(false);
        note.setBackground(new java.awt.Color(0, 102, 102));
        note.setColumns(20);
        note.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        note.setForeground(new java.awt.Color(255, 255, 255));
        note.setRows(5);
        jScrollPane1.setViewportView(note);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 480, 350, 156));

        medicine.setEditable(false);
        medicine.setBackground(new java.awt.Color(0, 102, 102));
        medicine.setColumns(20);
        medicine.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        medicine.setForeground(new java.awt.Color(255, 255, 255));
        medicine.setRows(5);
        jScrollPane3.setViewportView(medicine);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 200, 453, 140));

        jLabel13.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Lab Result");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 350, 126, -1));

        labResult.setEditable(false);
        labResult.setBackground(new java.awt.Color(0, 102, 102));
        labResult.setColumns(20);
        labResult.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        labResult.setForeground(new java.awt.Color(255, 255, 255));
        labResult.setRows(5);
        jScrollPane4.setViewportView(labResult);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 350, 453, 141));

        nic.setBackground(new java.awt.Color(0, 102, 102));
        buttonGroup1.add(nic);
        nic.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        nic.setForeground(new java.awt.Color(255, 255, 255));
        nic.setText("NIC");
        nic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nicActionPerformed(evt);
            }
        });
        getContentPane().add(nic, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 100, 30));

        pID.setBackground(new java.awt.Color(0, 102, 102));
        buttonGroup1.add(pID);
        pID.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        pID.setForeground(new java.awt.Color(255, 255, 255));
        pID.setText("Patient ID");
        getContentPane().add(pID, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 110, 30));

        buttonCheck.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        buttonCheck.setText("Check Details");
        buttonCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCheckActionPerformed(evt);
            }
        });
        getContentPane().add(buttonCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 120, 160, 30));

        getContentPane().add(clinics, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 120, 130, 30));

        jLabel1.setBackground(new java.awt.Color(0, 102, 102));
        jLabel1.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 1340, 690));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void patientIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientIDActionPerformed
        
    }//GEN-LAST:event_patientIDActionPerformed

    private void buttonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOkActionPerformed
        HomePage homePage = new HomePage();
        homePage.setVisible(true);
       dispose();
    }//GEN-LAST:event_buttonOkActionPerformed
    

   
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
   
     if(nic.isSelected() == true){
         try {
            pid = Integer.parseInt(patientID.getText().toString());
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/hospital management system", "root", "");
            pst = con.prepareStatement("select * from patient where NIC = ? ");
            pst.setInt(1, pid);
            ResultSet rsl = pst.executeQuery();

            if (!rsl.next()) {
                JOptionPane.showMessageDialog(this, "this id not exist");
                HomePage homePage = new HomePage();
                homePage.setVisible(true);
                dispose();
                patientID.requestFocus();
            } else {
                patientId = rsl.getInt("Patient_ID");

              }
            pst = con.prepareStatement("select * from health_record where Patient_ID = ? ");
            pst.setInt(1, patientId);
            rsl = pst.executeQuery();
          
               while(rsl.next()){
                   clinicID = rsl.getInt("Clinic_ID");
                   clinics.addItem(Integer.toString(clinicID));
                   count++;
                  }           
         
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_Record.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Add_Record.class.getName()).log(Level.SEVERE, null, ex);
        }   
     }
     
     else if(pID.isSelected() == true){
        try {
            pid = Integer.parseInt(patientID.getText().toString());
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/hospital management system", "root", "");
            pst = con.prepareStatement("select * from patient where Patient_ID = ? ");
            pst.setInt(1, pid);
            ResultSet rsl = pst.executeQuery();

            if (!rsl.next()) {
                JOptionPane.showMessageDialog(this, "this id not exist");
                HomePage homePage = new HomePage();
                homePage.setVisible(true);
                dispose();
                patientID.requestFocus();
            } else {                

            }
            
            pst = con.prepareStatement("select * from health_record where Patient_ID = ? ");
            pst.setInt(1, pid);
            rsl = pst.executeQuery();
            while(rsl.next()){
                   clinicID = rsl.getInt("Clinic_ID");
                   clinics.addItem(Integer.toString(clinicID));
                   count++;
                  }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_Record.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Add_Record.class.getName()).log(Level.SEVERE, null, ex);
        }
     }        
        /* if(nic.isSelected() == true)
    {
        try{
          pid = Integer.parseInt(patientID.getText().toString());
          Class.forName("com.mysql.jdbc.Driver");
          con = DriverManager.getConnection("jdbc:mysql://localhost/hospital management system","root","");  
          pst = con.prepareStatement("select * from patient where NIC = ? ");
           pst.setInt(1, pid  );
           ResultSet rsl = pst.executeQuery();          
	   
           if(!rsl.next()){
                JOptionPane.showMessageDialog(this, "this id not exist");
                HomePage homePage = new HomePage();
                 homePage.setVisible(true);
                 dispose();
               pName.setText("");
               age.setText("");
               gender.setText("");
               note.setText("");
               dName.setText("");
               clinic.setText("");
               medicine.setText("");
               lastUpdate.setText("");
               patientID.requestFocus();
            }
            else{
               
               patientId = rsl.getInt("Patient_ID");
               clinicID = rsl.getInt("Clinic_ID");
                pName.setText(rsl.getString("Patient_Name")); 
               age.setText(rsl.getString("Age"));
               gender.setText(rsl.getString("Gender"));
           }
           
             pst = con.prepareStatement("select * from lab_result where Patient_ID = ? ");
             pst.setInt(1, patientId);           
             rsl = pst.executeQuery(); 
             if(!rsl.next()){
             JOptionPane.showMessageDialog(this, "This patient doesn't have lab results...!");   
            }
            else{    
           labResult.setText(rsl.getString("Lab_result")); 
            }
             
            pst = con.prepareStatement("select * from clinic where Clinic_ID = ? ");
            pst.setInt(1, clinicID);           
            rsl = pst.executeQuery();     
            if(!rsl.next()){
              JOptionPane.showMessageDialog(this, "error");      
             }
             else{
           clinic.setText(rsl.getString("Clinic_Name"));    
           doctorID = rsl.getInt("Doctor_ID"); 
             }
           
            
            pst = con.prepareStatement("select * from doctor where Doctor_ID = ? ");
            pst.setInt(1, doctorID);           
            rsl = pst.executeQuery();      
             if(!rsl.next()){
               JOptionPane.showMessageDialog(this, "error");     
             }
             else{
             dName.setText(rsl.getString("Doctor_Name"));                 
             }

            pst = con.prepareStatement("select * from health_record where HR_ID = ? ");
            pst.setInt(1, patientId);           
            rsl = pst.executeQuery();  
              if(!rsl.next()){
               JOptionPane.showMessageDialog(this, "error");     
             }
             else{  
           medicine.setText(rsl.getString("Medicine"));
           lastUpdate.setText(rsl.getString("Last_Updated_date"));    
           note.setText(rsl.getString("Note"));                 
             }                                   
      }
        
       catch(ClassNotFoundException ex){
            Logger.getLogger(Add_Record.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch(SQLException ex){
           Logger.getLogger(Add_Record.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    else if (pID.isSelected() == true){
    try{
          pid = Integer.parseInt(patientID.getText().toString());
          Class.forName("com.mysql.jdbc.Driver");
          con = DriverManager.getConnection("jdbc:mysql://localhost/hospital management system","root","");  
          pst = con.prepareStatement("select * from patient where Patient_ID = ?");
           pst.setInt(1, pid  );
           ResultSet rsl = pst.executeQuery();          
	   
           if(!rsl.next()){
                JOptionPane.showMessageDialog(this, "this id not exist");
                HomePage homePage = new HomePage();
                 homePage.setVisible(true);
                 dispose();
               pName.setText("");
               age.setText("");
               gender.setText("");
               note.setText("");
               dName.setText("");
               clinic.setText("");
               medicine.setText("");
               lastUpdate.setText("");
               patientID.requestFocus();
            }
            else{
                clinicID = rsl.getInt("Clinic_ID");
                pName.setText(rsl.getString("Patient_Name")); 
               age.setText(rsl.getString("Age"));
               gender.setText(rsl.getString("Gender"));
           }
           
             pst = con.prepareStatement("select * from lab_result where Patient_ID = ? ");
             pst.setInt(1, pid);           
             rsl = pst.executeQuery(); 
             if(!rsl.next()){
             JOptionPane.showMessageDialog(this, "This patient doesn't have lab results...!");   
            }
            else{    
           labResult.setText(rsl.getString("Lab_result")); 
            }
             
            pst = con.prepareStatement("select * from clinic where Clinic_ID = ? ");
            pst.setInt(1, clinicID);           
            rsl = pst.executeQuery();     
            if(!rsl.next()){
              JOptionPane.showMessageDialog(this, "error");      
             }
             else{
           clinic.setText(rsl.getString("Clinic_Name"));    
           doctorID = rsl.getInt("Doctor_ID"); 
             }
           
            
            pst = con.prepareStatement("select * from doctor where Doctor_ID = ? ");
            pst.setInt(1, doctorID);           
            rsl = pst.executeQuery();      
             if(!rsl.next()){
               JOptionPane.showMessageDialog(this, "error");     
             }
             else{
             dName.setText(rsl.getString("Doctor_Name"));                 
             }

            pst = con.prepareStatement("select * from health_record where HR_ID = ? ");
            pst.setInt(1, pid);           
            rsl = pst.executeQuery();  
              if(!rsl.next()){
               JOptionPane.showMessageDialog(this, "error");     
             }
             else{  
           medicine.setText(rsl.getString("Medicine"));
           lastUpdate.setText(rsl.getString("Last_Updated_date"));    
           note.setText(rsl.getString("Note"));                 
             }                                   
      }
        
       catch(ClassNotFoundException ex){
            Logger.getLogger(Add_Record.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch(SQLException ex){
           Logger.getLogger(Add_Record.class.getName()).log(Level.SEVERE, null, ex);
        }    
    } */
        
    }//GEN-LAST:event_searchButtonActionPerformed

    private void nicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nicActionPerformed

    private void buttonCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCheckActionPerformed
        if(nic.isSelected() == true){
            try {
                int pid2 = patientId;
                int selectedClinic = Integer.parseInt(clinics.getSelectedItem().toString());
                Class.forName("com.mysql.jdbc.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost/hospital management system", "root", "");
                pst = con.prepareStatement("select * from patient where Patient_ID = ?");
                pst.setInt(1, pid2);
                ResultSet rsl = pst.executeQuery();

                if(!rsl.next()){
                JOptionPane.showMessageDialog(this, "this id not exist");
                HomePage homePage = new HomePage();
                 homePage.setVisible(true);
                 dispose();
               pName.setText("");
               age.setText("");
               gender.setText("");
               note.setText("");
               dName.setText("");
               clinic.setText("");
               medicine.setText("");
               lastUpdate.setText("");
               patientID.requestFocus();
            }
            else{
                pName.setText(rsl.getString("Patient_Name")); 
               age.setText(rsl.getString("Age"));
               gender.setText(rsl.getString("Gender"));
           }
                
                pst = con.prepareStatement("select * from health_record where Patient_ID = ? && Clinic_ID = ? ");
                pst.setInt(1, pid2);
                pst.setInt(2, selectedClinic);
                rsl = pst.executeQuery();

                if(!rsl.next()){
                    JOptionPane.showMessageDialog(this, "error");
                }
                else{
                    medicine.setText(rsl.getString("Medicine"));
                    lastUpdate.setText(rsl.getString("Last_Updated_date"));
                    note.setText(rsl.getString("Note"));
                }

                pst = con.prepareStatement("select * from clinic where Clinic_ID = ? ");
                pst.setInt(1, selectedClinic);
                rsl = pst.executeQuery();
                if (!rsl.next()) {
                    JOptionPane.showMessageDialog(this, "error");
                } else {
                    clinic.setText(rsl.getString("Clinic_Name"));
                    doctorID = rsl.getInt("Doctor_ID");
                }

                pst = con.prepareStatement("select * from doctor where Doctor_ID = ? ");
                pst.setInt(1, doctorID);
                rsl = pst.executeQuery();
                if (!rsl.next()) {
                    JOptionPane.showMessageDialog(this, "error");
                } else {
                    dName.setText(rsl.getString("Doctor_Name"));
                }

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Add_Record.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Add_Record.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(pID.isSelected() == true){
            try {

                int selectedClinic = Integer.parseInt(clinics.getSelectedItem().toString());
                Class.forName("com.mysql.jdbc.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost/hospital management system", "root", "");
                pst = con.prepareStatement("select * from patient where Patient_ID = ?");
                pst.setInt(1, pid);
                ResultSet rsl = pst.executeQuery();

                if (!rsl.next()) {
                    JOptionPane.showMessageDialog(this, "this id not exist");
                    HomePage homePage = new HomePage();
                    homePage.setVisible(true);
                    dispose();
                    pName.setText("");
                    note.setText("");
                    dName.setText("");
                    clinic.setText("");
                    medicine.setText("");
                    lastUpdate.setText("");
                    patientID.requestFocus();
                } else {
                     pName.setText(rsl.getString("Patient_Name")); 
                    age.setText(rsl.getString("Age"));
                    gender.setText(rsl.getString("Gender"));
                }
                pst = con.prepareStatement("select * from health_record where Patient_ID = ? && Clinic_ID = ? ");
                pst.setInt(1, pid);
                pst.setInt(2, selectedClinic);
                rsl = pst.executeQuery();

                if(!rsl.next()){
                    JOptionPane.showMessageDialog(this, "error");
                }
                else{
                    medicine.setText(rsl.getString("Medicine"));
                    lastUpdate.setText(rsl.getString("Last_Updated_date"));
                    note.setText(rsl.getString("Note"));
                }

                pst = con.prepareStatement("select * from clinic where Clinic_ID = ? ");
                pst.setInt(1, selectedClinic);
                rsl = pst.executeQuery();
                if (!rsl.next()) {
                    JOptionPane.showMessageDialog(this, "error");
                } else {
                    clinic.setText(rsl.getString("Clinic_Name"));
                    doctorID = rsl.getInt("Doctor_ID");
                }

                pst = con.prepareStatement("select * from doctor where Doctor_ID = ? ");
                pst.setInt(1, doctorID);
                rsl = pst.executeQuery();
                if (!rsl.next()) {
                    JOptionPane.showMessageDialog(this, "error");
                } else {
                    dName.setText(rsl.getString("Doctor_Name"));

                }

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Add_Record.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Add_Record.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_buttonCheckActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Patient_HR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Patient_HR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Patient_HR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Patient_HR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Patient_HR().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Label1;
    private javax.swing.JLabel age;
    private javax.swing.JButton buttonCheck;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton buttonOk;
    private javax.swing.JLabel clinic;
    private javax.swing.JComboBox<String> clinics;
    private javax.swing.JLabel dName;
    private javax.swing.JLabel gender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea labResult;
    private javax.swing.JLabel lastUpdate;
    private javax.swing.JTextArea medicine;
    private javax.swing.JRadioButton nic;
    private javax.swing.JTextArea note;
    private javax.swing.JRadioButton pID;
    private javax.swing.JLabel pName;
    private javax.swing.JTextField patientID;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables
}
